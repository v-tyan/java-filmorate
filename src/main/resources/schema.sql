CREATE TABLE IF NOT EXISTS USERS (
    USER_ID  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL    VARCHAR(50) NOT NULL,
    LOGIN    VARCHAR(20) NOT NULL,
    NAME     VARCHAR(50),
    BIRTHDAY DATE        NOT NULL
);

CREATE UNIQUE INDEX IF NOT EXISTS USER_EMAIL_UINDEX ON USERS (EMAIL);
CREATE UNIQUE INDEX IF NOT EXISTS USER_LOGIN_UINDEX ON USERS (LOGIN);

CREATE TABLE IF NOT EXISTS FRIENDSHIP (
    USER_ID   INTEGER NOT NULL,
    FRIEND_ID INTEGER NOT NULL,
    PRIMARY KEY (USER_ID, FRIEND_ID),
    CONSTRAINT FK_FRIENDSHIP_FRIEND_ID
        FOREIGN KEY (FRIEND_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    CONSTRAINT FK_FRIENDSHIP_USER_ID
        FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS GENRES (
    GENRE_ID INTEGER NOT NULL PRIMARY KEY,
    NAME VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS MPA (
    MPA_ID INTEGER NOT NULL PRIMARY KEY,
    NAME VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS (
    FILM_ID         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_NAME       VARCHAR(100) NOT NULL,
    DESCRIPTION     VARCHAR(200) NOT NULL,
    RELEASE_DATE    DATE         NOT NULL,
    DURATION        INT          NOT NULL,
    MPA_ID          INT          NOT NULL,
    CONSTRAINT FK_MPA_ID
        FOREIGN KEY (MPA_ID) REFERENCES MPA (MPA_ID) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS FILM_GENRE (
    FILM_ID  INTEGER NOT NULL,
    GENRE_ID INT    NOT NULL,
    PRIMARY KEY (GENRE_ID, FILM_ID),
    CONSTRAINT FK_FILM_ID
        FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    CONSTRAINT FK_GENRE_ID
        FOREIGN KEY (GENRE_ID) REFERENCES GENRES (GENRE_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FILMS_LIKES
(
    FILM_ID INTEGER NOT NULL,
    USER_ID INTEGER NOT NULL,
    PRIMARY KEY (USER_ID, FILM_ID),
    CONSTRAINT FK_FILMS_LIKES_FILM_ID
        FOREIGN KEY (FILM_ID) REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    CONSTRAINT FK_FILMS_LIKES_USER_ID
        FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE
);